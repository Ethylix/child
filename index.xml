<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to Child documentation on Child</title><link>https://ethylix.github.io/child/</link><description>Recent content in Welcome to Child documentation on Child</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ethylix.github.io/child/index.xml" rel="self" type="application/rss+xml"/><item><title>Bot Commands</title><link>https://ethylix.github.io/child/commands/bot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/commands/bot/</guid><description>Child has commands you can use in channels it&amp;rsquo;s present in.
!admin !ban !dehalfop !dehalfopall !deop !deopall !deowner !deprotect !devoice !devoiceall !halfop !halfopall !rkb !kb !rkick !kick !op !opall !owner !protect !seen !tb !tblist !topic !unban !voice !voiceall !admin Display online irc operators.
!ban Ban someone
!dehalfop Take halfop
!dehalfopall Dehalfop everyone</description></item><item><title>Chan Commands</title><link>https://ethylix.github.io/child/commands/chan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/commands/chan/</guid><description>You can always check each command help using /msg C chan help COMMAND access flags levels addbot assign banlist botlist clearbans clearchan clearmodes dehalfop delbot deop devoice drop entrymsg halfop info invite kick op register resync set aop autolimit avoice axxflags enablemask enftopic founder mass mlock noauto nojoin private protectops secure strictop suspend topic unassign unbanall unsuspend voice access Syntax: HELP CHAN ACCESS FLAGS for help about chanflags Syntax: HELP CHAN ACCESS LEVELS for help about old levels system The CHAN ACCESS command automatically adapts himself regarding to the AXXFLAGS channel option.</description></item><item><title>Docker development environment</title><link>https://ethylix.github.io/child/developer/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/developer/docker/</guid><description>Our docker-compose file will start:
mysql unrealircd child It provisions mysql with the schema in schema.sql and links Child as services.geeknode.org to unrealircd (test.geeknode.org). You can connect to unrealircd on port 6697 (tls self-signed) and /oper test test.
Start the stack docker-compose up If you want to rebuild the container and recreate mysql/unrealircd, use:
docker-compose up --build --force-recreate Stop the stack docker-compose down</description></item><item><title>Getting Started</title><link>https://ethylix.github.io/child/usage/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/usage/getting-started/</guid><description>This page is a quickstart and doesn&amp;rsquo;t describe all of Child capabilities. Register your user Identify yourself Register a channel Child behaves differently from other services like Anope or Atheme: instead of having multiple service accounts (NickServ, ChanServ, OperServ&amp;hellip;), C handles everything under its name.
This page describes how to register an account, identify yourself, register and manage simple access control on it.</description></item><item><title>Host Commands</title><link>https://ethylix.github.io/child/commands/host/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/commands/host/</guid><description>Host commands manage vhosts for users. These commands are only available to opers.
list set list /msg C host list List all users having a vhost.
set /msg C host set ACCOUNTNAME VHOST Set a vhost for an account.</description></item><item><title>Install Child</title><link>https://ethylix.github.io/child/administration/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/administration/install/</guid><description>Current limitations
Child doesn&amp;rsquo;t support linking over TLS/SSL to an ircd. The current recommendation is to link to a local ircd on the local interface (127.0.0.1). Dependencies Compile child Prepare MySQL Configure unrealircd Configure Child Start Child Register your first user Dependencies Install dependencies, example debian-based OSes:
apt install git libmariadb-dev-compat libmariadbclient-dev libc-dev libssl-dev cmake check Compile child git clone https://github.</description></item><item><title>Managing a channel</title><link>https://ethylix.github.io/child/usage/manage-channel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/usage/manage-channel/</guid><description>To execute on this, you need to have registered your account first. Register a channel Manage access lists Moderating Register a channel You now have your account and want to register your channel. To do so, you need to be +o (op) on a channel that is not registered yet.
/join #newchannel By entering the channel, the server will give you +o.</description></item><item><title>Managing your account</title><link>https://ethylix.github.io/child/usage/manage-account/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/usage/manage-account/</guid><description>Child&amp;rsquo;s NickServ is accessible via /msg C nick.
The first thing to do if you didn&amp;rsquo;t already is to register your account:
/msg C nick register PASSWORD EMAIL You will then receive a notice from C:
C (cserve@geeknode.org): You are now registered. User mode [+r] by services.geeknode.org You are now logged in as test. (nick!ident@host) These messages might appear in a status window or tab in your client. For instance, in weechat, it&amp;rsquo;ll be in the first buffer.</description></item><item><title>Nick Commands</title><link>https://ethylix.github.io/child/commands/nick/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/commands/nick/</guid><description>You can always check each command help using /msg C nick help COMMAND drop ghost identify info link register requestpassword set cloak email hideemail master noauto password private protect timeout unlink drop /msg C nick drop [ACCOUNTNAME] Drop your account.
ghost /msg C nick ghost ACCOUNTNAME PASSWORD Kill a ghosted nick. This is handy when one loses connectivity and their previous session is still holding a nick.</description></item><item><title>Oper Commands</title><link>https://ethylix.github.io/child/commands/oper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ethylix.github.io/child/commands/oper/</guid><description>These commands are only available to opers.
changelev chanlist die fakejoin fakekill fakelist fakenick fakesay fakeuser forceauth glineall glinechan global jupe killall modlist modload modunload nicklist noexpire operlist raw rehash regexpcheck restart savedb sglobal stats superadmin suspend trustadd trustdel trustlist userlist changelev Change a user&amp;rsquo;s level
chanlist Search a registered channel
die Die services</description></item></channel></rss>